{"version":3,"file":"notistack.cjs.production.min.js","sources":["../src/utils/constants.ts","../src/SnackbarContainer.tsx","../src/SnackbarContext.ts","../src/SnackbarContent/SnackbarContent.tsx","../src/utils/createChainedFunction.js","../src/utils/defaultIconVariants.tsx","../src/utils/useEventCallback.js","../src/SnackbarItem/Snackbar.js","../src/SnackbarItem/SnackbarItem.util.ts","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarProvider.tsx","../src/useSnackbar.ts","../src/withSnackbar.js"],"sourcesContent":["import Slide from '@material-ui/core/Slide';\nimport { SnackbarClassKey } from '@material-ui/core/Snackbar';\nimport { CloseReason, ContainerClassKey, VariantType, SnackbarOrigin, VariantClassKey } from '../index';\nimport { Snack } from '../SnackbarProvider';\n\nexport const MESSAGES = {\n\tNO_PERSIST_ALL:\n\t\t\"WARNING - notistack: Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.\",\n};\n\nexport const SNACKBAR_INDENTS = {\n\tview: { default: 20, dense: 4 },\n\tsnackbar: { default: 6, dense: 2 },\n};\n\nexport const DEFAULTS = {\n\tmaxSnack: 3,\n\tdense: false,\n\thideIconVariant: false,\n\tvariant: 'default' as VariantType,\n\tautoHideDuration: 5000,\n\tanchorOrigin: { vertical: 'bottom', horizontal: 'left' } as SnackbarOrigin,\n\tTransitionComponent: Slide,\n\ttransitionDuration: {\n\t\tenter: 225,\n\t\texit: 195,\n\t},\n};\n\nexport const capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: Snack['anchorOrigin']): string => `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`;\n\nexport const REASONS: { [key: string]: CloseReason } = {\n\tTIMEOUT: 'timeout',\n\tCLICKAWAY: 'clickaway',\n\tMAXSNACK: 'maxsnack',\n\tINSTRUCTED: 'instructed',\n};\n\n/** Tranforms classes name */\nexport const transformer = {\n\ttoContainerAnchorOrigin: (origin: string) => `containerAnchorOrigin${origin}` as ContainerClassKey,\n\ttoAnchorOrigin: ({ vertical, horizontal }: SnackbarOrigin) => `anchorOrigin${capitalise(vertical)}${capitalise(horizontal)}` as SnackbarClassKey,\n\ttoVariant: (variant: VariantType) => `variant${capitalise(variant)}` as VariantClassKey,\n};\n\nexport const isDefined = (value: string | null | undefined | number): boolean => !!value || value === 0;\n\nconst numberOrNull = (numberish?: number | null) => typeof numberish === 'number' || numberish === null;\n\n// @ts-ignore\nexport const merge = (options, props, defaults) => (name: keyof Snack): any => {\n\tif (name === 'autoHideDuration') {\n\t\tif (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n\t\tif (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n\t\treturn DEFAULTS.autoHideDuration;\n\t}\n\n\treturn options[name] || props[name] || defaults[name];\n};\n\nexport function objectMerge(options = {}, props = {}, defaults = {}) {\n\treturn {\n\t\t...defaults,\n\t\t...props,\n\t\t...options,\n\t};\n}\n","import { css } from '@emotion/react';\nimport { styled, Theme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { SnackbarProviderProps } from '.';\nimport { SNACKBAR_INDENTS } from './utils/constants';\n\nconst collapse = {\n\tcontainer: '& > .MuiCollapse-container',\n\twrapper: '& > .MuiCollapse-container > .MuiCollapse-wrapper',\n};\n\nconst xsWidthMargin = 16;\n\ninterface SnackbarContainerProps {\n\tdense: SnackbarProviderProps['dense'];\n\tanchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n}\n\nconst rootDense = css`\n\t${collapse.wrapper} {\n\t\tpadding: ${SNACKBAR_INDENTS.snackbar.dense}px 0px;\n\t}\n`;\n\nconst top = css`\n\ttop: ${SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default};\n\tflex-direction: column;\n`;\n\nconst bottom = css`\n\tbottom: ${SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default};\n\tflex-direction: column-reverse;\n`;\n\nconst left = (theme: Theme) => css`\n\tleft: ${SNACKBAR_INDENTS.view.default};\n\t${theme.breakpoints.up('sm')} {\n\t\talign-items: flex-start;\n\t}\n\t${theme.breakpoints.down('xs')} {\n\t\tleft: ${xsWidthMargin}px;\n\t}\n`;\n\nconst right = (theme: Theme) => css`\n\tright: ${SNACKBAR_INDENTS.view.default};\n\t${theme.breakpoints.up('sm')} {\n\t\talign-items: flex-end;\n\t}\n\t${theme.breakpoints.down('xs')} {\n\t\tright: ${xsWidthMargin}px;\n\t}\n`;\n\nconst SnackbarContainer = styled('div')<SnackbarContainerProps>`\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tmax-height: 100%;\n\tposition: fixed;\n\tz-index: ${(props) => props.theme.zIndex.snackbar};\n\theight: auto;\n\twidth: auto;\n\ttransition: top 300ms ease 0ms, right 300ms ease 0ms, bottom 300ms ease 0ms, left 300ms ease 0ms, margin 300ms ease 0ms, max-width 300ms ease 0ms;\n\t// container itself is invisible and should not block clicks, clicks should be passed to its children\n\tpointer-events: 'none';\n\n\t${collapse.container} {\n\t\tpointer-events: 'all';\n\t}\n\t${collapse.wrapper} {\n\t\tpadding: ${SNACKBAR_INDENTS.snackbar.default}px 0px;\n\t\ttransition: padding 300ms ease 0ms;\n\t}\n\n\tmax-width: calc(100% - ${SNACKBAR_INDENTS.view.default * 2}px);\n\n\t${(props) => props.theme.breakpoints.down('xs')} {\n\t\twidth: 100%;\n\t\tmax-width: calc(100% - ${xsWidthMargin * 2}px);\n\t}\n\n\t${(props) => props.dense && rootDense}\n\n\t${(props) => props.anchorOrigin.vertical === 'top' && top}\n\t${(props) => props.anchorOrigin.horizontal === 'right' && right(props.theme)}\n\t${(props) => props.anchorOrigin.vertical === 'bottom' && bottom}\n\t${(props) => props.anchorOrigin.horizontal === 'left' && left(props.theme)}\n`;\n\nexport default React.memo(SnackbarContainer);\n","import React from 'react';\nimport { ProviderContext } from '.';\n\n// @ts-ignore\nexport default React.createContext<ProviderContext>();\n","import { styled } from '@material-ui/core/styles';\nimport { SnackbarContentProps } from '../index';\n\nconst SnackbarContent = styled('div')<SnackbarContentProps>`\n\tdisplay: flex;\n\tflex-wrap: flex;\n\tflex-grow: 1;\n\n\t${(props) => props.theme.breakpoints.up('sm')} {\n\t\tflex-grow: initial;\n\t\tmin-width: 288;\n\t}\n`;\n\nexport default SnackbarContent;\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport { IconVariant } from '../index';\n\ntype Icon = (props: SvgIconProps) => JSX.Element;\n\nconst CheckIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst iconStyles = {\n    fontSize: 20,\n    marginInlineEnd: 8,\n};\n\nconst defaultIconVariants: IconVariant = {\n    default: undefined,\n    success: <CheckIcon style={iconStyles} />,\n    warning: <WarningIcon style={iconStyles} />,\n    error: <ErrorIcon style={iconStyles} />,\n    info: <InfoIcon style={iconStyles} />,\n};\n\nexport default defaultIconVariants;\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/useEventCallback.js\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback(fn) {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((...args) => (0, ref.current)(...args), []);\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Snackbar/Snackbar.js\n */\nimport * as React from 'react';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { REASONS } from '../utils/constants';\nimport useEventCallback from '../utils/useEventCallback';\n\nconst Snackbar = React.forwardRef((props, ref) => {\n    const {\n        children,\n        autoHideDuration,\n        ClickAwayListenerProps,\n        disableWindowBlurListener = false,\n        onClose,\n        onMouseEnter,\n        onMouseLeave,\n        open,\n        resumeHideDuration,\n        ...other\n    } = props;\n\n    const timerAutoHide = React.useRef();\n\n    const handleClose = useEventCallback((...args) => {\n        if (onClose) {\n            onClose(...args);\n        }\n    });\n\n    const setAutoHideTimer = useEventCallback((autoHideDurationParam) => {\n        if (!onClose || autoHideDurationParam == null) {\n            return;\n        }\n\n        clearTimeout(timerAutoHide.current);\n        timerAutoHide.current = setTimeout(() => {\n            handleClose(null, REASONS.TIMEOUT);\n        }, autoHideDurationParam);\n    });\n\n    React.useEffect(() => {\n        if (open) {\n            setAutoHideTimer(autoHideDuration);\n        }\n\n        return () => {\n            clearTimeout(timerAutoHide.current);\n        };\n    }, [open, autoHideDuration, setAutoHideTimer]);\n\n    /**\n     * Pause the timer when the user is interacting with the Snackbar\n     * or when the user hide the window.\n     */\n    const handlePause = () => {\n        clearTimeout(timerAutoHide.current);\n    };\n\n    /**\n     * Restart the timer when the user is no longer interacting with the Snackbar\n     * or when the window is shown back.\n     */\n    const handleResume = React.useCallback(() => {\n        if (autoHideDuration != null) {\n            setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n        }\n    }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n    const handleMouseEnter = (event) => {\n        if (onMouseEnter) {\n            onMouseEnter(event);\n        }\n        handlePause();\n    };\n\n    const handleMouseLeave = (event) => {\n        if (onMouseLeave) {\n            onMouseLeave(event);\n        }\n        handleResume();\n    };\n\n    const handleClickAway = (event) => {\n        if (onClose) {\n            onClose(event, REASONS.CLICKAWAY);\n        }\n    };\n\n    React.useEffect(() => {\n        if (!disableWindowBlurListener && open) {\n            window.addEventListener('focus', handleResume);\n            window.addEventListener('blur', handlePause);\n\n            return () => {\n                window.removeEventListener('focus', handleResume);\n                window.removeEventListener('blur', handlePause);\n            };\n        }\n\n        return undefined;\n    }, [disableWindowBlurListener, handleResume, open]);\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway} {...ClickAwayListenerProps}>\n            <div onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} ref={ref} {...other}>\n                {children}\n            </div>\n        </ClickAwayListener>\n    );\n});\n\nexport default Snackbar;\n","import { Snack } from '../SnackbarProvider';\n\nconst DIRECTION = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n} as const;\nexport type DirectionType = typeof DIRECTION[keyof typeof DIRECTION]\n\nexport const getTransitionDirection = (anchorOrigin: Snack['anchorOrigin']): DirectionType => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return DIRECTION[anchorOrigin.horizontal];\n    }\n    return DIRECTION[anchorOrigin.vertical];\n};\n","import { css } from '@emotion/react';\nimport Collapse from '@material-ui/core/Collapse';\nimport { emphasize, styled } from '@material-ui/core/styles';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RequiredBy, SharedProps, SnackbarProviderProps as ProviderProps, TransitionHandlerProps, VariantType } from '../index';\nimport SnackbarContent from '../SnackbarContent';\nimport { Snack } from '../SnackbarProvider';\nimport { DEFAULTS, objectMerge, REASONS } from '../utils/constants';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport Snackbar from './Snackbar';\nimport { getTransitionDirection } from './SnackbarItem.util';\n\nconst contentRoot = css`\n\tposition: relative;\n\ttransform: translateX(0);\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n`;\n\nconst StyledSnackbar = styled(Snackbar)`\n\t${(props) => props.theme.typography.body2};\n\tbackground-color: ${(props) =>\n\t\temphasize(props.theme.palette.background.default, (props.theme.palette.mode || props.theme.palette.type) === 'light' ? 0.8 : 0.98)};\n\t${contentRoot}\n`;\n\nconst variantSuccess = css`\n\tbackground-color: #43a047; // green\n\tcolor: #fff;\n`;\nconst variantError = css`\n\tbackground-color: #d32f2f; // dark red\n\tcolor: #fff;\n`;\nconst variantInfo = css`\n\tbackground-color: #2196f3; // nice blue\n\tcolor: #fff;\n`;\nconst variantWarning = css`\n\tbackground-color: #ff9800; // amber\n\tcolor: #fff;\n`;\n\ninterface StyledSnackbarContentProps {\n\tlessPadding: boolean;\n\tvariant: VariantType;\n}\n\nconst StyledSnackbarContent = styled(SnackbarContent)<StyledSnackbarContentProps>`\n\t${contentRoot}\n\t${(props) => props.lessPadding && `padding-left: ${8 * 2.5}px;`}\n    ${(props) => props.variant === 'success' && variantSuccess}\n    ${(props) => props.variant === 'error' && variantError}\n    ${(props) => props.variant === 'info' && variantInfo}\n    ${(props) => props.variant === 'warning' && variantWarning}\n`;\n\nconst Message = styled('div')`\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 8px 0;\n`;\n\nconst Action = styled('div')`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-left: auto;\n\tpadding-left: 16px;\n\tmargin-right: -8px;\n`;\n\ntype RemovedProps =\n\t| 'variant' // the one received from Provider is processed and passed to snack prop\n\t| 'anchorOrigin' // same as above\n\t| 'autoHideDuration' // same as above\n\t| 'preventDuplicate'; // the one recevied from enqueueSnackbar is processed in provider, therefore shouldn't be passed to SnackbarItem */\n\nexport interface SnackbarItemProps extends RequiredBy<Omit<SharedProps, RemovedProps>, 'onEntered' | 'onExited' | 'onClose'> {\n\tsnack: Snack;\n\tdense: ProviderProps['dense'];\n\ticonVariant: ProviderProps['iconVariant'];\n\thideIconVariant: ProviderProps['hideIconVariant'];\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = (props) => {\n\tconst timeout = useRef<ReturnType<typeof setTimeout>>();\n\tconst [collapsed, setCollapsed] = useState(true);\n\n\tuseEffect(\n\t\t() => (): void => {\n\t\t\tif (timeout.current) {\n\t\t\t\tclearTimeout(timeout.current);\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n\tconst handleEntered: TransitionHandlerProps['onEntered'] = () => {\n\t\tif (props.snack.requestClose) {\n\t\t\thandleClose(null, REASONS.INSTRCUTED);\n\t\t}\n\t};\n\n\tconst handleExitedScreen = (): void => {\n\t\ttimeout.current = setTimeout(() => {\n\t\t\tsetCollapsed(!collapsed);\n\t\t}, 125);\n\t};\n\n\tconst {\n\t\tstyle,\n\t\tdense,\n\t\tariaAttributes: otherAriaAttributes,\n\t\tclassName: otherClassName,\n\t\thideIconVariant,\n\t\ticonVariant,\n\t\tsnack,\n\t\taction: otherAction,\n\t\tcontent: otherContent,\n\t\tTransitionComponent: otherTranComponent,\n\t\tTransitionProps: otherTranProps,\n\t\ttransitionDuration: otherTranDuration,\n\t\tonEnter: ignoredOnEnter,\n\t\tonEntered: ignoredOnEntered,\n\t\tonEntering: ignoredOnEntering,\n\t\tonExit: ignoredOnExit,\n\t\tonExited: ignoredOnExited,\n\t\tonExiting: ignoredOnExiting,\n\t\t...other\n\t} = props;\n\n\tconst {\n\t\tpersist,\n\t\tkey,\n\t\topen,\n\t\tentered,\n\t\trequestClose,\n\t\tclassName: singleClassName,\n\t\tvariant,\n\t\tcontent: singleContent,\n\t\taction: singleAction,\n\t\tariaAttributes: singleAriaAttributes,\n\t\tanchorOrigin,\n\t\tmessage: snackMessage,\n\t\tTransitionComponent: singleTranComponent,\n\t\tTransitionProps: singleTranProps,\n\t\ttransitionDuration: singleTranDuration,\n\t\tonEnter,\n\t\tonEntered,\n\t\tonEntering,\n\t\tonExit,\n\t\tonExited,\n\t\tonExiting,\n\t\t...singleSnackProps\n\t} = snack;\n\n\tconst icon = {\n\t\t...defaultIconVariants,\n\t\t...iconVariant,\n\t}[variant];\n\n\tconst ariaAttributes = {\n\t\t'aria-describedby': 'notistack-snackbar',\n\t\t...objectMerge(singleAriaAttributes, otherAriaAttributes),\n\t};\n\n\tconst TransitionComponent = singleTranComponent || otherTranComponent || DEFAULTS.TransitionComponent;\n\tconst transitionDuration = objectMerge(singleTranDuration, otherTranDuration, DEFAULTS.transitionDuration);\n\tconst transitionProps = {\n\t\tdirection: getTransitionDirection(anchorOrigin),\n\t\t...objectMerge(singleTranProps, otherTranProps),\n\t};\n\n\tlet action = singleAction || otherAction;\n\tif (typeof action === 'function') {\n\t\taction = action(key);\n\t}\n\n\tlet content = singleContent || otherContent;\n\tif (typeof content === 'function') {\n\t\tcontent = content(key, snack.message);\n\t}\n\n\tconst callbacks: { [key in keyof TransitionHandlerProps]?: any } = ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce(\n\t\t(acc, cbName) => ({\n\t\t\t...acc,\n\t\t\t// @ts-ignore\n\t\t\t[cbName]: createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key),\n\t\t}),\n\t\t{}\n\t);\n\n\treturn (\n\t\t<Collapse unmountOnExit timeout={175} in={collapsed} onExited={callbacks.onExited}>\n\t\t\t{/* @ts-ignore */}\n\t\t\t<StyledSnackbar {...other} {...singleSnackProps} open={open} onClose={handleClose}>\n\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t<TransitionComponent\n\t\t\t\t\tappear\n\t\t\t\t\tin={open}\n\t\t\t\t\ttimeout={transitionDuration}\n\t\t\t\t\t{...transitionProps}\n\t\t\t\t\tonExit={callbacks.onExit}\n\t\t\t\t\tonExiting={callbacks.onExiting}\n\t\t\t\t\tonExited={handleExitedScreen}\n\t\t\t\t\tonEnter={callbacks.onEnter}\n\t\t\t\t\tonEntering={callbacks.onEntering}\n\t\t\t\t\t// order matters. first callbacks.onEntered to set entered: true,\n\t\t\t\t\t// then handleEntered to check if there's a request for closing\n\t\t\t\t\tonEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n\t\t\t\t>\n\t\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t\t{content || (\n\t\t\t\t\t\t<StyledSnackbarContent\n\t\t\t\t\t\t\t{...ariaAttributes}\n\t\t\t\t\t\t\t{...ariaAttributes}\n\t\t\t\t\t\t\trole=\"alert\"\n\t\t\t\t\t\t\tlessPadding={!hideIconVariant && icon !== undefined}\n\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Message id={ariaAttributes['aria-describedby']}>\n\t\t\t\t\t\t\t\t{!hideIconVariant ? icon : null}\n\t\t\t\t\t\t\t\t{snackMessage}\n\t\t\t\t\t\t\t</Message>\n\t\t\t\t\t\t\t{action && <Action>{action}</Action>}\n\t\t\t\t\t\t</StyledSnackbarContent>\n\t\t\t\t\t)}\n\t\t\t\t</TransitionComponent>\n\t\t\t</StyledSnackbar>\n\t\t</Collapse>\n\t);\n};\n\nexport default SnackbarItem;\n","import clsx from 'clsx';\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { OptionsObject, ProviderContext, RequiredBy, SnackbarKey, SnackbarMessage, SnackbarProviderProps, TransitionHandlerProps } from '.';\nimport SnackbarContainer from './SnackbarContainer';\nimport SnackbarContext from './SnackbarContext';\nimport SnackbarItem from './SnackbarItem';\nimport { DEFAULTS, isDefined, merge, MESSAGES, originKeyExtractor, REASONS, transformer } from './utils/constants';\nimport createChainedFunction from './utils/createChainedFunction';\nimport warning from './utils/warning';\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: Snack[] };\n\nexport interface Snack extends RequiredBy<OptionsObject, 'key' | 'variant' | 'anchorOrigin'> {\n\tmessage: SnackbarMessage;\n\topen: boolean;\n\tentered: boolean;\n\trequestClose: boolean;\n}\n\ninterface State {\n\tsnacks: Snack[];\n\tqueue: Snack[];\n\tcontextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n\tconstructor(props: SnackbarProviderProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsnacks: [],\n\t\t\tqueue: [], // eslint-disable-line react/no-unused-state\n\t\t\tcontextValue: {\n\t\t\t\tenqueueSnackbar: this.enqueueSnackbar,\n\t\t\t\tcloseSnackbar: this.closeSnackbar,\n\t\t\t},\n\t\t};\n\t}\n\n\tget maxSnack(): number {\n\t\treturn this.props.maxSnack || DEFAULTS.maxSnack;\n\t}\n\n\t/**\n\t * Adds a new snackbar to the queue to be presented.\n\t * Returns generated or user defined key referencing the new snackbar or null\n\t */\n\tenqueueSnackbar = (message: SnackbarMessage, opts: OptionsObject = {}): SnackbarKey => {\n\t\tconst { key, preventDuplicate, ...options } = opts;\n\n\t\tconst hasSpecifiedKey = isDefined(key);\n\t\tconst id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n\t\tconst merger = merge(options, this.props, DEFAULTS);\n\t\tconst snack: Snack = {\n\t\t\tkey: id,\n\t\t\t...options,\n\t\t\tmessage,\n\t\t\topen: true,\n\t\t\tentered: false,\n\t\t\trequestClose: false,\n\t\t\tvariant: merger('variant'),\n\t\t\tanchorOrigin: merger('anchorOrigin'),\n\t\t\tautoHideDuration: merger('autoHideDuration'),\n\t\t};\n\n\t\tif (options.persist) {\n\t\t\tsnack.autoHideDuration = undefined;\n\t\t}\n\n\t\tthis.setState((state) => {\n\t\t\tif ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n\t\t\t\tconst compareFunction = (item: Snack): boolean => (hasSpecifiedKey ? item.key === key : item.message === message);\n\n\t\t\t\tconst inQueue = state.queue.findIndex(compareFunction) > -1;\n\t\t\t\tconst inView = state.snacks.findIndex(compareFunction) > -1;\n\t\t\t\tif (inQueue || inView) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.handleDisplaySnack({\n\t\t\t\t...state,\n\t\t\t\tqueue: [...state.queue, snack],\n\t\t\t});\n\t\t});\n\n\t\treturn id;\n\t};\n\n\t/**\n\t * Reducer: Display snack if there's space for it. Otherwise, immediately\n\t * begin dismissing the oldest message to start showing the new one.\n\t */\n\thandleDisplaySnack: Reducer = (state) => {\n\t\tconst { snacks } = state;\n\t\tif (snacks.length >= this.maxSnack) {\n\t\t\treturn this.handleDismissOldest(state);\n\t\t}\n\t\treturn this.processQueue(state);\n\t};\n\n\t/**\n\t * Reducer: Display items (notifications) in the queue if there's space for them.\n\t */\n\tprocessQueue: Reducer = (state) => {\n\t\tconst { queue, snacks } = state;\n\t\tif (queue.length > 0) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsnacks: [...snacks, queue[0]],\n\t\t\t\tqueue: queue.slice(1, queue.length),\n\t\t\t};\n\t\t}\n\t\treturn state;\n\t};\n\n\t/**\n\t * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n\t * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n\t *\n\t * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n\t * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n\t *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n\t */\n\thandleDismissOldest: Reducer = (state) => {\n\t\tif (state.snacks.some((item) => !item.open || item.requestClose)) {\n\t\t\treturn state;\n\t\t}\n\n\t\tlet popped = false;\n\t\tlet ignore = false;\n\n\t\tconst persistentCount = state.snacks.reduce((acc, current) => acc + (current.open && current.persist ? 1 : 0), 0);\n\n\t\tif (persistentCount === this.maxSnack) {\n\t\t\twarning(MESSAGES.NO_PERSIST_ALL);\n\t\t\tignore = true;\n\t\t}\n\n\t\tconst snacks = state.snacks.map((item) => {\n\t\t\tif (!popped && (!item.persist || ignore)) {\n\t\t\t\tpopped = true;\n\n\t\t\t\tif (!item.entered) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\trequestClose: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n\t\t\t\tif (this.props.onClose) this.props.onClose(null, REASONS.MAXSNACK, item.key);\n\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\topen: false,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn { ...item };\n\t\t});\n\n\t\treturn { ...state, snacks };\n\t};\n\n\t/**\n\t * Set the entered state of the snackbar with the given key.\n\t */\n\thandleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n\t\tif (!isDefined(key)) {\n\t\t\tthrow new Error('handleEnteredSnack Cannot be called with undefined key');\n\t\t}\n\n\t\tthis.setState(({ snacks }) => ({\n\t\t\tsnacks: snacks.map((item) => (item.key === key ? { ...item, entered: true } : { ...item })),\n\t\t}));\n\t};\n\n\t/**\n\t * Hide a snackbar after its timeout.\n\t */\n\thandleCloseSnack: TransitionHandlerProps['onClose'] = (event, reason, key) => {\n\t\t// should not use createChainedFunction for onClose.\n\t\t// because this.closeSnackbar called this function\n\t\tif (this.props.onClose) {\n\t\t\tthis.props.onClose(event, reason, key);\n\t\t}\n\n\t\tif (reason === REASONS.CLICKAWAY) return;\n\t\tconst shouldCloseAll = key === undefined;\n\n\t\tthis.setState(({ snacks, queue }) => ({\n\t\t\tsnacks: snacks.map((item) => {\n\t\t\t\tif (!shouldCloseAll && item.key !== key) {\n\t\t\t\t\treturn { ...item };\n\t\t\t\t}\n\n\t\t\t\treturn item.entered ? { ...item, open: false } : { ...item, requestClose: true };\n\t\t\t}),\n\t\t\tqueue: queue.filter((item) => item.key !== key), // eslint-disable-line react/no-unused-state\n\t\t}));\n\t};\n\n\t/**\n\t * Close snackbar with the given key\n\t */\n\tcloseSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n\t\t// call individual snackbar onClose callback passed through options parameter\n\t\tconst toBeClosed = this.state.snacks.find((item) => item.key === key);\n\t\tif (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n\t\t\ttoBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n\t\t}\n\n\t\tthis.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n\t};\n\n\t/**\n\t * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n\t * it leaves the screen and immediately after leaving animation is done, this method\n\t * gets called. We remove the hidden snackbar from state and then display notifications\n\t * waiting in the queue (if any). If after this process the queue is not empty, the\n\t * oldest message is dismissed.\n\t */\n\t// @ts-ignore\n\thandleExitedSnack: TransitionHandlerProps['onExited'] = (event, key1, key2) => {\n\t\tconst key = key1 || key2;\n\t\tif (!isDefined(key)) {\n\t\t\tthrow new Error('handleExitedSnack Cannot be called with undefined key');\n\t\t}\n\n\t\tthis.setState((state) => {\n\t\t\tconst newState = this.processQueue({\n\t\t\t\t...state,\n\t\t\t\tsnacks: state.snacks.filter((item) => item.key !== key),\n\t\t\t});\n\n\t\t\tif (newState.queue.length === 0) {\n\t\t\t\treturn newState;\n\t\t\t}\n\n\t\t\treturn this.handleDismissOldest(newState);\n\t\t});\n\t};\n\n\trender(): JSX.Element {\n\t\tconst { contextValue } = this.state;\n\t\tconst {\n\t\t\tmaxSnack: dontspread1,\n\t\t\tpreventDuplicate: dontspread2,\n\t\t\tvariant: dontspread3,\n\t\t\tanchorOrigin: dontspread4,\n\t\t\ticonVariant,\n\t\t\tdense = DEFAULTS.dense,\n\t\t\thideIconVariant = DEFAULTS.hideIconVariant,\n\t\t\tdomRoot,\n\t\t\tchildren,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tconst categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n\t\t\tconst category = originKeyExtractor(current.anchorOrigin);\n\t\t\tconst existingOfCategory = acc[category] || [];\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[category]: [...existingOfCategory, current],\n\t\t\t};\n\t\t}, {});\n\n\t\tconst snackbars = Object.keys(categ).map((origin) => {\n\t\t\tconst snacks = categ[origin];\n\t\t\treturn (\n\t\t\t\t<SnackbarContainer\n\t\t\t\t\tkey={origin}\n\t\t\t\t\tdense={dense}\n\t\t\t\t\tanchorOrigin={snacks[0].anchorOrigin}\n\t\t\t\t\tclassName={clsx(classes.containerRoot, classes[transformer.toContainerAnchorOrigin(origin)])}\n\t\t\t\t>\n\t\t\t\t\t{snacks.map((snack) => (\n\t\t\t\t\t\t<SnackbarItem\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\tkey={snack.key}\n\t\t\t\t\t\t\tsnack={snack}\n\t\t\t\t\t\t\tdense={dense}\n\t\t\t\t\t\t\ticonVariant={iconVariant}\n\t\t\t\t\t\t\thideIconVariant={hideIconVariant}\n\t\t\t\t\t\t\tonClose={this.handleCloseSnack}\n\t\t\t\t\t\t\tonExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n\t\t\t\t\t\t\tonEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</SnackbarContainer>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<SnackbarContext.Provider value={contextValue}>\n\t\t\t\t{children}\n\t\t\t\t{domRoot ? createPortal(snackbars, domRoot) : snackbars}\n\t\t\t</SnackbarContext.Provider>\n\t\t);\n\t}\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from '.';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {context => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n"],"names":["DEFAULTS","maxSnack","dense","hideIconVariant","variant","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","transitionDuration","enter","exit","capitalise","text","charAt","toUpperCase","slice","REASONS","TIMEOUT","CLICKAWAY","MAXSNACK","INSTRUCTED","transformer","origin","isDefined","value","numberOrNull","numberish","objectMerge","options","props","defaults","collapse","rootDense","css","top","SNACKBAR_INDENTS","bottom","React","memo","styled","theme","zIndex","snackbar","breakpoints","down","xsWidthMargin","up","createContext","SnackbarContent","createChainedFunction","funcs","extraArg","reduce","acc","func","args","argums","indexOf","push","apply","this","CheckIcon","SvgIcon","d","WarningIcon","ErrorIcon","InfoIcon","iconStyles","fontSize","marginInlineEnd","defaultIconVariants","undefined","success","style","warning","error","info","useEnhancedEffect","window","useEventCallback","fn","ref","current","Snackbar","children","ClickAwayListenerProps","disableWindowBlurListener","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","other","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","addEventListener","removeEventListener","React.createElement","ClickAwayListener","onClickAway","event","DIRECTION","right","left","getTransitionDirection","contentRoot","StyledSnackbar","typography","body2","emphasize","palette","background","mode","type","variantSuccess","variantError","variantInfo","variantWarning","StyledSnackbarContent","lessPadding","Message","Action","SnackbarItem","timeout","useRef","useState","collapsed","setCollapsed","useEffect","snack","key","ariaAttributes","otherClassName","iconVariant","otherAction","action","otherContent","content","otherTranComponent","otherTranProps","TransitionProps","otherTranDuration","entered","singleContent","singleAction","singleAriaAttributes","snackMessage","message","singleTranComponent","singleTranProps","singleTranDuration","singleSnackProps","icon","_extends","otherAriaAttributes","transitionProps","direction","callbacks","cbName","Collapse","unmountOnExit","onExited","appear","onExit","onExiting","onEnter","onEntering","onEntered","requestClose","INSTRCUTED","role","id","SnackbarProvider","opts","preventDuplicate","hasSpecifiedKey","Date","getTime","Math","random","merger","name","merge","_this","persist","setState","state","compareFunction","item","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","length","handleDismissOldest","processQueue","some","popped","ignore","map","node","isAppearing","Error","reason","shouldCloseAll","filter","toBeClosed","find","handleCloseSnack","key1","key2","newState","contextValue","enqueueSnackbar","closeSnackbar","render","dontspread1","domRoot","categ","anchor","category","snackbars","Object","keys","SnackbarContainer","className","clsx","classes","containerRoot","_this2","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","createPortal","Component","useContext","WrappedComponent","forwardRef","Consumer","context","hoistNonReactStatics"],"mappings":"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"}