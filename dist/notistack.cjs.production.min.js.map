{"version":3,"file":"notistack.cjs.production.min.js","sources":["../src/SnackbarContext.ts","../src/SnackbarContent/SnackbarContent.tsx","../src/utils/constants.ts","../src/utils/createChainedFunction.js","../src/utils/defaultIconVariants.tsx","../src/utils/useEventCallback.js","../src/SnackbarItem/Snackbar.js","../src/SnackbarItem/SnackbarItem.util.ts","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarProvider.tsx","../src/useSnackbar.ts","../src/withSnackbar.js"],"sourcesContent":["import React from 'react';\nimport { ProviderContext } from '.';\n\n// @ts-ignore\nexport default React.createContext<ProviderContext>();\n","import { styled } from '@material-ui/core/styles';\nimport { SnackbarContentProps } from '../index';\n\nconst SnackbarContent = styled('div')<SnackbarContentProps>`\n\tdisplay: flex;\n\tflex-wrap: flex;\n\tflex-grow: 1;\n\n\t${(props) => props.theme.breakpoints.up('sm')} {\n\t\tflex-grow: initial;\n\t\tmin-width: 288;\n\t}\n`;\n\nexport default SnackbarContent;\n","import Slide from '@material-ui/core/Slide';\nimport { SnackbarClassKey } from '@material-ui/core/Snackbar';\nimport { CloseReason, ContainerClassKey, VariantType, SnackbarOrigin, VariantClassKey } from '../index';\nimport { Snack } from '../SnackbarProvider';\n\nexport const MESSAGES = {\n\tNO_PERSIST_ALL:\n\t\t\"WARNING - notistack: Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.\",\n};\n\nexport const SNACKBAR_INDENTS = {\n\tview: { default: 20, dense: 4 },\n\tsnackbar: { default: 6, dense: 2 },\n};\n\nexport const DEFAULTS = {\n\tmaxSnack: 3,\n\tdense: false,\n\thideIconVariant: false,\n\tvariant: 'default' as VariantType,\n\tautoHideDuration: 5000,\n\tanchorOrigin: { vertical: 'bottom', horizontal: 'left' } as SnackbarOrigin,\n\tTransitionComponent: Slide,\n\ttransitionDuration: {\n\t\tenter: 225,\n\t\texit: 195,\n\t},\n};\n\nexport const capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: Snack['anchorOrigin']): string => `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`;\n\nexport const REASONS: { [key: string]: CloseReason } = {\n\tTIMEOUT: 'timeout',\n\tCLICKAWAY: 'clickaway',\n\tMAXSNACK: 'maxsnack',\n\tINSTRUCTED: 'instructed',\n};\n\n/** Tranforms classes name */\nexport const transformer = {\n\ttoContainerAnchorOrigin: (origin: string) => `containerAnchorOrigin${origin}` as ContainerClassKey,\n\ttoAnchorOrigin: ({ vertical, horizontal }: SnackbarOrigin) => `anchorOrigin${capitalise(vertical)}${capitalise(horizontal)}` as SnackbarClassKey,\n\ttoVariant: (variant: VariantType) => `variant${capitalise(variant)}` as VariantClassKey,\n};\n\nexport const isDefined = (value: string | null | undefined | number): boolean => !!value || value === 0;\n\nconst numberOrNull = (numberish?: number | null) => typeof numberish === 'number' || numberish === null;\n\n// @ts-ignore\nexport const merge = (options, props, defaults) => (name: keyof Snack): any => {\n\tif (name === 'autoHideDuration') {\n\t\tif (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n\t\tif (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n\t\treturn DEFAULTS.autoHideDuration;\n\t}\n\n\treturn options[name] || props[name] || defaults[name];\n};\n\nexport function objectMerge(options = {}, props = {}, defaults = {}) {\n\treturn {\n\t\t...defaults,\n\t\t...props,\n\t\t...options,\n\t};\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport { IconVariant } from '../index';\n\ntype Icon = (props: SvgIconProps) => JSX.Element;\n\nconst CheckIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst iconStyles = {\n    fontSize: 20,\n    marginInlineEnd: 8,\n};\n\nconst defaultIconVariants: IconVariant = {\n    default: undefined,\n    success: <CheckIcon style={iconStyles} />,\n    warning: <WarningIcon style={iconStyles} />,\n    error: <ErrorIcon style={iconStyles} />,\n    info: <InfoIcon style={iconStyles} />,\n};\n\nexport default defaultIconVariants;\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/useEventCallback.js\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback(fn) {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((...args) => (0, ref.current)(...args), []);\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Snackbar/Snackbar.js\n */\nimport * as React from 'react';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { REASONS } from '../utils/constants';\nimport useEventCallback from '../utils/useEventCallback';\n\nconst Snackbar = React.forwardRef((props, ref) => {\n    const {\n        children,\n        autoHideDuration,\n        ClickAwayListenerProps,\n        disableWindowBlurListener = false,\n        onClose,\n        onMouseEnter,\n        onMouseLeave,\n        open,\n        resumeHideDuration,\n        ...other\n    } = props;\n\n    const timerAutoHide = React.useRef();\n\n    const handleClose = useEventCallback((...args) => {\n        if (onClose) {\n            onClose(...args);\n        }\n    });\n\n    const setAutoHideTimer = useEventCallback((autoHideDurationParam) => {\n        if (!onClose || autoHideDurationParam == null) {\n            return;\n        }\n\n        clearTimeout(timerAutoHide.current);\n        timerAutoHide.current = setTimeout(() => {\n            handleClose(null, REASONS.TIMEOUT);\n        }, autoHideDurationParam);\n    });\n\n    React.useEffect(() => {\n        if (open) {\n            setAutoHideTimer(autoHideDuration);\n        }\n\n        return () => {\n            clearTimeout(timerAutoHide.current);\n        };\n    }, [open, autoHideDuration, setAutoHideTimer]);\n\n    /**\n     * Pause the timer when the user is interacting with the Snackbar\n     * or when the user hide the window.\n     */\n    const handlePause = () => {\n        clearTimeout(timerAutoHide.current);\n    };\n\n    /**\n     * Restart the timer when the user is no longer interacting with the Snackbar\n     * or when the window is shown back.\n     */\n    const handleResume = React.useCallback(() => {\n        if (autoHideDuration != null) {\n            setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n        }\n    }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n    const handleMouseEnter = (event) => {\n        if (onMouseEnter) {\n            onMouseEnter(event);\n        }\n        handlePause();\n    };\n\n    const handleMouseLeave = (event) => {\n        if (onMouseLeave) {\n            onMouseLeave(event);\n        }\n        handleResume();\n    };\n\n    const handleClickAway = (event) => {\n        if (onClose) {\n            onClose(event, REASONS.CLICKAWAY);\n        }\n    };\n\n    React.useEffect(() => {\n        if (!disableWindowBlurListener && open) {\n            window.addEventListener('focus', handleResume);\n            window.addEventListener('blur', handlePause);\n\n            return () => {\n                window.removeEventListener('focus', handleResume);\n                window.removeEventListener('blur', handlePause);\n            };\n        }\n\n        return undefined;\n    }, [disableWindowBlurListener, handleResume, open]);\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway} {...ClickAwayListenerProps}>\n            <div onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} ref={ref} {...other}>\n                {children}\n            </div>\n        </ClickAwayListener>\n    );\n});\n\nexport default Snackbar;\n","import { Snack } from '../SnackbarProvider';\n\nconst DIRECTION = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n} as const;\nexport type DirectionType = typeof DIRECTION[keyof typeof DIRECTION]\n\nexport const getTransitionDirection = (anchorOrigin: Snack['anchorOrigin']): DirectionType => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return DIRECTION[anchorOrigin.horizontal];\n    }\n    return DIRECTION[anchorOrigin.vertical];\n};\n","import { css } from '@emotion/react';\nimport Collapse from '@material-ui/core/Collapse';\nimport { emphasize, styled } from '@material-ui/core/styles';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RequiredBy, SharedProps, SnackbarProviderProps as ProviderProps, TransitionHandlerProps, VariantType } from '../index';\nimport SnackbarContent from '../SnackbarContent';\nimport { Snack } from '../SnackbarProvider';\nimport { DEFAULTS, objectMerge, REASONS } from '../utils/constants';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport Snackbar from './Snackbar';\nimport { getTransitionDirection } from './SnackbarItem.util';\n\nconst contentRoot = css`\n\tposition: relative;\n\ttransform: translateX(0);\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n`;\n\nconst StyledSnackbar = styled(Snackbar)`\n\t${(props) => props.theme.typography.body2};\n\tbackground-color: ${(props) =>\n\t\temphasize(props.theme.palette.background.default, (props.theme.palette.mode || props.theme.palette.type) === 'light' ? 0.8 : 0.98)};\n\t${contentRoot}\n`;\n\nconst variantSuccess = css`\n\tbackground-color: #43a047; // green\n\tcolor: #fff;\n`;\nconst variantError = css`\n\tbackground-color: #d32f2f; // dark red\n\tcolor: #fff;\n`;\nconst variantInfo = css`\n\tbackground-color: #2196f3; // nice blue\n\tcolor: #fff;\n`;\nconst variantWarning = css`\n\tbackground-color: #ff9800; // amber\n\tcolor: #fff;\n`;\n\ninterface StyledSnackbarContentProps {\n\tlessPadding: boolean;\n\tvariant: VariantType;\n}\n\nconst StyledSnackbarContent = styled(SnackbarContent)<StyledSnackbarContentProps>`\n\t${contentRoot}\n\t${(props) => props.lessPadding && `padding-left: ${8 * 2.5}px;`}\n    ${(props) => props.variant === 'success' && variantSuccess}\n    ${(props) => props.variant === 'error' && variantError}\n    ${(props) => props.variant === 'info' && variantInfo}\n    ${(props) => props.variant === 'warning' && variantWarning}\n`;\n\nconst Message = styled('div')`\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 8px 0;\n`;\n\nconst Action = styled('div')`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-left: auto;\n\tpadding-left: 16px;\n\tmargin-right: -8px;\n`;\n\ntype RemovedProps =\n\t| 'variant' // the one received from Provider is processed and passed to snack prop\n\t| 'anchorOrigin' // same as above\n\t| 'autoHideDuration' // same as above\n\t| 'preventDuplicate'; // the one recevied from enqueueSnackbar is processed in provider, therefore shouldn't be passed to SnackbarItem */\n\nexport interface SnackbarItemProps extends RequiredBy<Omit<SharedProps, RemovedProps>, 'onEntered' | 'onExited' | 'onClose'> {\n\tsnack: Snack;\n\tdense: ProviderProps['dense'];\n\ticonVariant: ProviderProps['iconVariant'];\n\thideIconVariant: ProviderProps['hideIconVariant'];\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = (props) => {\n\tconst timeout = useRef<ReturnType<typeof setTimeout>>();\n\tconst [collapsed, setCollapsed] = useState(true);\n\n\tuseEffect(\n\t\t() => (): void => {\n\t\t\tif (timeout.current) {\n\t\t\t\tclearTimeout(timeout.current);\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n\tconst handleEntered: TransitionHandlerProps['onEntered'] = () => {\n\t\tif (props.snack.requestClose) {\n\t\t\thandleClose(null, REASONS.INSTRCUTED);\n\t\t}\n\t};\n\n\tconst handleExitedScreen = (): void => {\n\t\ttimeout.current = setTimeout(() => {\n\t\t\tsetCollapsed(!collapsed);\n\t\t}, 125);\n\t};\n\n\tconst {\n\t\tstyle,\n\t\tdense,\n\t\tariaAttributes: otherAriaAttributes,\n\t\tclassName: otherClassName,\n\t\thideIconVariant,\n\t\ticonVariant,\n\t\tsnack,\n\t\taction: otherAction,\n\t\tcontent: otherContent,\n\t\tTransitionComponent: otherTranComponent,\n\t\tTransitionProps: otherTranProps,\n\t\ttransitionDuration: otherTranDuration,\n\t\tonEnter: ignoredOnEnter,\n\t\tonEntered: ignoredOnEntered,\n\t\tonEntering: ignoredOnEntering,\n\t\tonExit: ignoredOnExit,\n\t\tonExited: ignoredOnExited,\n\t\tonExiting: ignoredOnExiting,\n\t\t...other\n\t} = props;\n\n\tconst {\n\t\tpersist,\n\t\tkey,\n\t\topen,\n\t\tentered,\n\t\trequestClose,\n\t\tclassName: singleClassName,\n\t\tvariant,\n\t\tcontent: singleContent,\n\t\taction: singleAction,\n\t\tariaAttributes: singleAriaAttributes,\n\t\tanchorOrigin,\n\t\tmessage: snackMessage,\n\t\tTransitionComponent: singleTranComponent,\n\t\tTransitionProps: singleTranProps,\n\t\ttransitionDuration: singleTranDuration,\n\t\tonEnter,\n\t\tonEntered,\n\t\tonEntering,\n\t\tonExit,\n\t\tonExited,\n\t\tonExiting,\n\t\t...singleSnackProps\n\t} = snack;\n\n\tconst icon = {\n\t\t...defaultIconVariants,\n\t\t...iconVariant,\n\t}[variant];\n\n\tconst ariaAttributes = {\n\t\t'aria-describedby': 'notistack-snackbar',\n\t\t...objectMerge(singleAriaAttributes, otherAriaAttributes),\n\t};\n\n\tconst TransitionComponent = singleTranComponent || otherTranComponent || DEFAULTS.TransitionComponent;\n\tconst transitionDuration = objectMerge(singleTranDuration, otherTranDuration, DEFAULTS.transitionDuration);\n\tconst transitionProps = {\n\t\tdirection: getTransitionDirection(anchorOrigin),\n\t\t...objectMerge(singleTranProps, otherTranProps),\n\t};\n\n\tlet action = singleAction || otherAction;\n\tif (typeof action === 'function') {\n\t\taction = action(key);\n\t}\n\n\tlet content = singleContent || otherContent;\n\tif (typeof content === 'function') {\n\t\tcontent = content(key, snack.message);\n\t}\n\n\tconst callbacks: { [key in keyof TransitionHandlerProps]?: any } = ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce(\n\t\t(acc, cbName) => ({\n\t\t\t...acc,\n\t\t\t// @ts-ignore\n\t\t\t[cbName]: createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key),\n\t\t}),\n\t\t{}\n\t);\n\n\treturn (\n\t\t<Collapse unmountOnExit timeout={175} in={collapsed} onExited={callbacks.onExited}>\n\t\t\t{/* @ts-ignore */}\n\t\t\t<StyledSnackbar {...other} {...singleSnackProps} open={open} onClose={handleClose}>\n\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t<TransitionComponent\n\t\t\t\t\tappear\n\t\t\t\t\tin={open}\n\t\t\t\t\ttimeout={transitionDuration}\n\t\t\t\t\t{...transitionProps}\n\t\t\t\t\tonExit={callbacks.onExit}\n\t\t\t\t\tonExiting={callbacks.onExiting}\n\t\t\t\t\tonExited={handleExitedScreen}\n\t\t\t\t\tonEnter={callbacks.onEnter}\n\t\t\t\t\tonEntering={callbacks.onEntering}\n\t\t\t\t\t// order matters. first callbacks.onEntered to set entered: true,\n\t\t\t\t\t// then handleEntered to check if there's a request for closing\n\t\t\t\t\tonEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n\t\t\t\t>\n\t\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t\t{content || (\n\t\t\t\t\t\t<StyledSnackbarContent\n\t\t\t\t\t\t\t{...ariaAttributes}\n\t\t\t\t\t\t\t{...ariaAttributes}\n\t\t\t\t\t\t\trole=\"alert\"\n\t\t\t\t\t\t\tlessPadding={!hideIconVariant && icon !== undefined}\n\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Message id={ariaAttributes['aria-describedby']}>\n\t\t\t\t\t\t\t\t{!hideIconVariant ? icon : null}\n\t\t\t\t\t\t\t\t{snackMessage}\n\t\t\t\t\t\t\t</Message>\n\t\t\t\t\t\t\t{action && <Action>{action}</Action>}\n\t\t\t\t\t\t</StyledSnackbarContent>\n\t\t\t\t\t)}\n\t\t\t\t</TransitionComponent>\n\t\t\t</StyledSnackbar>\n\t\t</Collapse>\n\t);\n};\n\nexport default SnackbarItem;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport SnackbarContainer from 'SnackbarContainer';\nimport { OptionsObject, ProviderContext, RequiredBy, SnackbarKey, SnackbarMessage, SnackbarProviderProps, TransitionHandlerProps } from '.';\nimport SnackbarContext from './SnackbarContext';\nimport SnackbarItem from './SnackbarItem';\nimport { DEFAULTS, isDefined, merge, MESSAGES, originKeyExtractor, REASONS } from './utils/constants';\nimport createChainedFunction from './utils/createChainedFunction';\nimport warning from './utils/warning';\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: Snack[] };\n\nexport interface Snack extends RequiredBy<OptionsObject, 'key' | 'variant' | 'anchorOrigin'> {\n\tmessage: SnackbarMessage;\n\topen: boolean;\n\tentered: boolean;\n\trequestClose: boolean;\n}\n\ninterface State {\n\tsnacks: Snack[];\n\tqueue: Snack[];\n\tcontextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n\tconstructor(props: SnackbarProviderProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsnacks: [],\n\t\t\tqueue: [], // eslint-disable-line react/no-unused-state\n\t\t\tcontextValue: {\n\t\t\t\tenqueueSnackbar: this.enqueueSnackbar,\n\t\t\t\tcloseSnackbar: this.closeSnackbar,\n\t\t\t},\n\t\t};\n\t}\n\n\tget maxSnack(): number {\n\t\treturn this.props.maxSnack || DEFAULTS.maxSnack;\n\t}\n\n\t/**\n\t * Adds a new snackbar to the queue to be presented.\n\t * Returns generated or user defined key referencing the new snackbar or null\n\t */\n\tenqueueSnackbar = (message: SnackbarMessage, opts: OptionsObject = {}): SnackbarKey => {\n\t\tconst { key, preventDuplicate, ...options } = opts;\n\n\t\tconst hasSpecifiedKey = isDefined(key);\n\t\tconst id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n\t\tconst merger = merge(options, this.props, DEFAULTS);\n\t\tconst snack: Snack = {\n\t\t\tkey: id,\n\t\t\t...options,\n\t\t\tmessage,\n\t\t\topen: true,\n\t\t\tentered: false,\n\t\t\trequestClose: false,\n\t\t\tvariant: merger('variant'),\n\t\t\tanchorOrigin: merger('anchorOrigin'),\n\t\t\tautoHideDuration: merger('autoHideDuration'),\n\t\t};\n\n\t\tif (options.persist) {\n\t\t\tsnack.autoHideDuration = undefined;\n\t\t}\n\n\t\tthis.setState((state) => {\n\t\t\tif ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n\t\t\t\tconst compareFunction = (item: Snack): boolean => (hasSpecifiedKey ? item.key === key : item.message === message);\n\n\t\t\t\tconst inQueue = state.queue.findIndex(compareFunction) > -1;\n\t\t\t\tconst inView = state.snacks.findIndex(compareFunction) > -1;\n\t\t\t\tif (inQueue || inView) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.handleDisplaySnack({\n\t\t\t\t...state,\n\t\t\t\tqueue: [...state.queue, snack],\n\t\t\t});\n\t\t});\n\n\t\treturn id;\n\t};\n\n\t/**\n\t * Reducer: Display snack if there's space for it. Otherwise, immediately\n\t * begin dismissing the oldest message to start showing the new one.\n\t */\n\thandleDisplaySnack: Reducer = (state) => {\n\t\tconst { snacks } = state;\n\t\tif (snacks.length >= this.maxSnack) {\n\t\t\treturn this.handleDismissOldest(state);\n\t\t}\n\t\treturn this.processQueue(state);\n\t};\n\n\t/**\n\t * Reducer: Display items (notifications) in the queue if there's space for them.\n\t */\n\tprocessQueue: Reducer = (state) => {\n\t\tconst { queue, snacks } = state;\n\t\tif (queue.length > 0) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsnacks: [...snacks, queue[0]],\n\t\t\t\tqueue: queue.slice(1, queue.length),\n\t\t\t};\n\t\t}\n\t\treturn state;\n\t};\n\n\t/**\n\t * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n\t * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n\t *\n\t * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n\t * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n\t *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n\t */\n\thandleDismissOldest: Reducer = (state) => {\n\t\tif (state.snacks.some((item) => !item.open || item.requestClose)) {\n\t\t\treturn state;\n\t\t}\n\n\t\tlet popped = false;\n\t\tlet ignore = false;\n\n\t\tconst persistentCount = state.snacks.reduce((acc, current) => acc + (current.open && current.persist ? 1 : 0), 0);\n\n\t\tif (persistentCount === this.maxSnack) {\n\t\t\twarning(MESSAGES.NO_PERSIST_ALL);\n\t\t\tignore = true;\n\t\t}\n\n\t\tconst snacks = state.snacks.map((item) => {\n\t\t\tif (!popped && (!item.persist || ignore)) {\n\t\t\t\tpopped = true;\n\n\t\t\t\tif (!item.entered) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\trequestClose: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n\t\t\t\tif (this.props.onClose) this.props.onClose(null, REASONS.MAXSNACK, item.key);\n\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\topen: false,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn { ...item };\n\t\t});\n\n\t\treturn { ...state, snacks };\n\t};\n\n\t/**\n\t * Set the entered state of the snackbar with the given key.\n\t */\n\thandleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n\t\tif (!isDefined(key)) {\n\t\t\tthrow new Error('handleEnteredSnack Cannot be called with undefined key');\n\t\t}\n\n\t\tthis.setState(({ snacks }) => ({\n\t\t\tsnacks: snacks.map((item) => (item.key === key ? { ...item, entered: true } : { ...item })),\n\t\t}));\n\t};\n\n\t/**\n\t * Hide a snackbar after its timeout.\n\t */\n\thandleCloseSnack: TransitionHandlerProps['onClose'] = (event, reason, key) => {\n\t\t// should not use createChainedFunction for onClose.\n\t\t// because this.closeSnackbar called this function\n\t\tif (this.props.onClose) {\n\t\t\tthis.props.onClose(event, reason, key);\n\t\t}\n\n\t\tif (reason === REASONS.CLICKAWAY) return;\n\t\tconst shouldCloseAll = key === undefined;\n\n\t\tthis.setState(({ snacks, queue }) => ({\n\t\t\tsnacks: snacks.map((item) => {\n\t\t\t\tif (!shouldCloseAll && item.key !== key) {\n\t\t\t\t\treturn { ...item };\n\t\t\t\t}\n\n\t\t\t\treturn item.entered ? { ...item, open: false } : { ...item, requestClose: true };\n\t\t\t}),\n\t\t\tqueue: queue.filter((item) => item.key !== key), // eslint-disable-line react/no-unused-state\n\t\t}));\n\t};\n\n\t/**\n\t * Close snackbar with the given key\n\t */\n\tcloseSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n\t\t// call individual snackbar onClose callback passed through options parameter\n\t\tconst toBeClosed = this.state.snacks.find((item) => item.key === key);\n\t\tif (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n\t\t\ttoBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n\t\t}\n\n\t\tthis.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n\t};\n\n\t/**\n\t * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n\t * it leaves the screen and immediately after leaving animation is done, this method\n\t * gets called. We remove the hidden snackbar from state and then display notifications\n\t * waiting in the queue (if any). If after this process the queue is not empty, the\n\t * oldest message is dismissed.\n\t */\n\t// @ts-ignore\n\thandleExitedSnack: TransitionHandlerProps['onExited'] = (event, key1, key2) => {\n\t\tconst key = key1 || key2;\n\t\tif (!isDefined(key)) {\n\t\t\tthrow new Error('handleExitedSnack Cannot be called with undefined key');\n\t\t}\n\n\t\tthis.setState((state) => {\n\t\t\tconst newState = this.processQueue({\n\t\t\t\t...state,\n\t\t\t\tsnacks: state.snacks.filter((item) => item.key !== key),\n\t\t\t});\n\n\t\t\tif (newState.queue.length === 0) {\n\t\t\t\treturn newState;\n\t\t\t}\n\n\t\t\treturn this.handleDismissOldest(newState);\n\t\t});\n\t};\n\n\trender(): JSX.Element {\n\t\tconst { contextValue } = this.state;\n\t\tconst {\n\t\t\tmaxSnack: dontspread1,\n\t\t\tpreventDuplicate: dontspread2,\n\t\t\tvariant: dontspread3,\n\t\t\tanchorOrigin: dontspread4,\n\t\t\ticonVariant,\n\t\t\tdense = DEFAULTS.dense,\n\t\t\thideIconVariant = DEFAULTS.hideIconVariant,\n\t\t\tdomRoot,\n\t\t\tchildren,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tconst categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n\t\t\tconst category = originKeyExtractor(current.anchorOrigin);\n\t\t\tconst existingOfCategory = acc[category] || [];\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[category]: [...existingOfCategory, current],\n\t\t\t};\n\t\t}, {});\n\n\t\tconst snackbars = Object.keys(categ).map((origin) => {\n\t\t\tconst snacks = categ[origin];\n\t\t\treturn (\n\t\t\t\t<SnackbarContainer key={origin} dense={dense} anchorOrigin={snacks[0].anchorOrigin}>\n\t\t\t\t\t{snacks.map((snack) => (\n\t\t\t\t\t\t<SnackbarItem\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\tkey={snack.key}\n\t\t\t\t\t\t\tsnack={snack}\n\t\t\t\t\t\t\tdense={dense}\n\t\t\t\t\t\t\ticonVariant={iconVariant}\n\t\t\t\t\t\t\thideIconVariant={hideIconVariant}\n\t\t\t\t\t\t\tonClose={this.handleCloseSnack}\n\t\t\t\t\t\t\tonExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n\t\t\t\t\t\t\tonEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</SnackbarContainer>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<SnackbarContext.Provider value={contextValue}>\n\t\t\t\t{children}\n\t\t\t\t{domRoot ? createPortal(snackbars, domRoot) : snackbars}\n\t\t\t</SnackbarContext.Provider>\n\t\t);\n\t}\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from '.';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {context => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n"],"names":["React","createContext","SnackbarContent","styled","props","theme","breakpoints","up","DEFAULTS","maxSnack","dense","hideIconVariant","variant","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","transitionDuration","enter","exit","capitalise","text","charAt","toUpperCase","slice","REASONS","TIMEOUT","CLICKAWAY","MAXSNACK","INSTRUCTED","isDefined","value","numberOrNull","numberish","objectMerge","options","defaults","createChainedFunction","funcs","extraArg","reduce","acc","func","args","argums","indexOf","push","apply","this","CheckIcon","SvgIcon","d","WarningIcon","ErrorIcon","InfoIcon","iconStyles","fontSize","marginInlineEnd","defaultIconVariants","undefined","success","style","warning","error","info","useEnhancedEffect","window","useEventCallback","fn","ref","current","Snackbar","children","ClickAwayListenerProps","disableWindowBlurListener","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","other","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","addEventListener","removeEventListener","React.createElement","ClickAwayListener","onClickAway","event","DIRECTION","right","left","bottom","top","getTransitionDirection","contentRoot","css","StyledSnackbar","typography","body2","emphasize","palette","background","mode","type","variantSuccess","variantError","variantInfo","variantWarning","StyledSnackbarContent","lessPadding","Message","Action","SnackbarItem","timeout","useRef","useState","collapsed","setCollapsed","useEffect","snack","key","ariaAttributes","otherClassName","iconVariant","otherAction","action","otherContent","content","otherTranComponent","otherTranProps","TransitionProps","otherTranDuration","entered","singleContent","singleAction","singleAriaAttributes","snackMessage","message","singleTranComponent","singleTranProps","singleTranDuration","singleSnackProps","icon","_extends","otherAriaAttributes","transitionProps","direction","callbacks","cbName","Collapse","unmountOnExit","onExited","appear","onExit","onExiting","onEnter","onEntering","onEntered","requestClose","INSTRCUTED","role","id","SnackbarProvider","opts","preventDuplicate","hasSpecifiedKey","Date","getTime","Math","random","merger","name","merge","_this","persist","setState","state","compareFunction","item","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","length","handleDismissOldest","processQueue","some","popped","ignore","map","node","isAppearing","Error","reason","shouldCloseAll","filter","toBeClosed","find","handleCloseSnack","key1","key2","newState","contextValue","enqueueSnackbar","closeSnackbar","render","dontspread1","domRoot","categ","anchor","category","snackbars","Object","keys","origin","SnackbarContainer","_this2","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","createPortal","Component","useContext","WrappedComponent","forwardRef","Consumer","context","hoistNonReactStatics"],"mappings":"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"}